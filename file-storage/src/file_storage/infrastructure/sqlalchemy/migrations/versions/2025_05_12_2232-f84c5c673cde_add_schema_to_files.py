"""add schema to files

Revision ID: f84c5c673cde
Revises: 199c22bc09c3
Create Date: 2025-05-12 22:32:02.330953

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

from file_storage.main.config import DB_SCHEMA  # noqa: F401

# revision identifiers, used by Alembic.
revision: str = "f84c5c673cde"
down_revision: Union[str, None] = "199c22bc09c3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TYPE IF EXISTS files_schema.result_type_enum")
    result_type_enum = sa.Enum("FORMAT", name="result_type_enum", schema="files_schema")

    op.drop_index("ix_files_schema_files_id", table_name="files", schema="files_schema")
    op.create_index(op.f("ix_files_schema_files_id"), "files", ["id"], unique=True, schema="files_schema")

    op.create_table(
        "results",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("file_id", sa.Uuid(), nullable=False),
        sa.Column("file_name", sa.String(), nullable=False),
        sa.Column("folder_name", sa.String(), nullable=False),
        sa.Column("path", sa.String(), nullable=False),
        sa.Column("type", result_type_enum, nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("TIMEZONE('Europe/Moscow', now())"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("TIMEZONE('Europe/Moscow', now())"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["file_id"], ["files_schema.files.id"], name=op.f("fk_results_file_id_files"), ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_results")),
        sa.UniqueConstraint("path", name=op.f("uq_results_path")),
        sa.UniqueConstraint("type", "file_id", name="uq_result_type_file_id"),
        schema="files_schema",
    )
    op.create_index(op.f("ix_files_schema_results_id"), "results", ["id"], unique=False, schema="files_schema")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TYPE IF EXISTS files_schema.result_type_enum CASCADE")
    op.drop_index(op.f("ix_files_schema_results_id"), table_name="results", schema="files_schema")
    op.drop_table("results", schema="files_schema")
    # ### end Alembic commands ###
