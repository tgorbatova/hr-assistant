[project]
name = "converter-service"
version = "0.1.0"
description = "Service for converting files (doc, docx, pdf) to plain text"
readme = "README.md"
requires-python = "~=3.12"
dependencies = [
    "dishka>=1.4.2",
    "orjson>=3.10.16",
    "pyyaml>=6.0.2",
    "structlog>=25.2.0",
    "taskiq>=0.11.11",
    "taskiq-redis>=1.0.2",
    "fastapi>=0.115.8",
    "python-multipart>=0.0.20",
    "docx2txt>=0.9",
    "textract>=1.6.5",
    "taskiq-pipelines>=0.1.4",
    "openai>=1.75.0",
    "faststream>=0.5.39",
    "nats-py>=2.10.0",
    "aiohttp>=3.11.18",
]

[dependency-groups]
backend = [
    "uvicorn>=0.34.0",
]

dev = [
    "mypy>=1.13.0",
    "pyright>=1.1.387",
    "ruff>=0.8.1",
    "types-markdown>=3.7.0.20240822",
    "types-python-dateutil>=2.9.0.20241003",
    "types-redis>=4.6.0.20241004",
]
app = [
    "pypdf2>=3.0.1",
    "python-docx>=1.1.2"
]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py313"
show-fixes = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN201", #  Missing return type annotation for fastapi routes
    "S101",   # Use of `assert` detected
    "CPY001", # Missing copyright notice at top of file,
    "DOC501", # Raised exception missing from docstring
    "DOC201", # `return` is not documented in docstring
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D106",   # Missing docstring in public nested class
    "D107",   # Missing docstring in `__init__`
    "D203",   # 1 blank line required before class docstring
    "D211",   # No blank lines allowed before function docstring
    "D213",   # Multi-line docstring summary should start at the second line
    "DOC402", # `yield` is not documented in docstring
    "COM812", # Trailing comma missing, conflicts with formatter
    "RUF001", # String contains ambiguous `с` (CYRILLIC SMALL LETTER ES). Did you mean `c` (LATIN SMALL LETTER C)?
    "RUF002", # Docstring contains ambiguous `с` (CYRILLIC SMALL LETTER ES). Did you mean `c` (LATIN SMALL LETTER C)?
    "RUF003", # ambiguous `с` (CYRILLIC SMALL LETTER ES). Did you mean `c` (LATIN SMALL LETTER C)?
    "TC001",  # Move application import into a type-checking block
    "TC002",  # Move third-party import
    "TC003",  # Move standard library import into a type-checking bloc
    "TRY400", # Use `logging.exception` instead of `logging.error`
    "PLR0917",# Too many arguments in function definition
    "PLR0913",# Too many arguments in function definition > 5
    "FIX002", # Line contains TODO, consider resolving the issue
    "TD002",  # Missing author in TODO;
    "TD003",  # Missing issue link on the line following this TODO
    "ISC001", # The following rule may cause conflicts when used with the formatter: `ISC001`
    "FBT001", # Boolean-typed positional argument in function definition
    "FURB118",# Use `operator.itemgetter("name")` instead of defining a lambda
]
unfixable = [
    "B905",
]

[tool.ruff.lint.per-file-ignores]
"*/migrations/*" = ["UP", "S608", "N999", "D"]
"*/di/*" = [
    "D102",    # Missing docstring in public method
    "PLR6301", # Method could be a function, class method, or static metho
]
"*/routes/*" = [
    "D301",    # Use `r"""` if any backslashes in a docstring
]
"*/tests/*" = [
    "ANN",     # Annotations required
    "D",       # Documentation required
    "PTH",     #
    "SLF001",  #
    "PLR6301", # Method could be a function, class method, or static method
    "S404",    # `subprocess` module is possibly insecure
    "PLR2004", # Magic value used in comparison
    "ARG001"   # Unused function argument
]
"*/main/*" = [
    "RUF029"   # Function is declared `async`, but doesn't `await` or use `async` features.
]
"*/__init__.py" = ["F401", "D104"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint.isort]
length-sort = false

[tool.mypy]
plugins = ["pydantic.mypy"]
ignore_missing_imports = true
disallow_untyped_defs = true
exclude = ["tests", "alembic"]
warn_unused_ignores = false
